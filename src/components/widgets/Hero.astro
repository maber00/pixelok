---
import { Image } from 'astro:assets';
import coworking from '../../assets/images/Cokorking-Pixel-Living.webp';
import terraza from '../../assets/images/193-Terraza-006HD.webp';
---

<section class="w-full min-h-screen md:h-[80vh] p-4 md:px-8">
  <div class="h-full max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-3 gap-4 relative">
    <!-- Primera columna: Vive en modo pixel -->
    <div class="bg-emerald-500 dark:bg-red-500 rounded-lg border-4 dark:border-red-800 border-emerald-600 flex items-center p-4 md:p-0 justify-start md:justify-center h-[200px] md:h-full hover:scale-[1.02] transition-transform duration-300">
      <h1 class="text-white text-4xl md:text-5xl lg:text-7xl font-bold text-left md:text-left">
        VIVE EN<br />MODO<br />PIXEL
      </h1>
    </div>

    <!-- Columna media: Video + Imagen -->
    <div class="flex flex-col gap-4 normal-content">
      <!-- Video de YouTube -->
      <div class="w-full aspect-video bg-yellow-400 rounded-lg overflow-hidden cursor-pointer video-container" data-position="top">
        <iframe
          class="w-full h-full"
          src="https://www.youtube.com/embed/_-am3wcfrig"
          title="YouTube video"
          frameborder="0"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
          allowfullscreen
        ></iframe>
      </div>

      <!-- Imagen inferior -->
      <div class="flex-1 relative rounded-lg overflow-hidden cursor-pointer image-container" data-position="bottom">
        <Image
          src={coworking}
          alt="Coworking Pixel Living"
          class="w-full h-[200px] md:h-full object-cover"
          width={800}
          height={600}
        />
      </div>
    </div>

    <!-- Última columna: Imagen completa -->
    <div class="relative rounded-lg overflow-hidden cursor-pointer image-container h-[300px] md:h-full" data-position="right">
      <Image
        src={terraza}
        alt="Terraza"
        class="w-full h-full object-cover"
        width={800}
        height={1200}
      />
    </div>

    <!-- Contenedor de imagen/video expandido -->
    <div class="expanded-container hidden absolute inset-0 md:left-1/3 md:w-2/3 w-full bg-white rounded-lg overflow-hidden z-20">
      <div class="w-full h-full">
        <img class="w-full h-full object-cover hidden" src="" alt="Expanded image" />
        <iframe class="w-full h-full hidden" src="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
      </div>
      <button class="absolute top-4 right-4 bg-black/50 hover:bg-black/70 text-white rounded-full p-2 transition-all">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>
</section>

<style>
  .image-container, .video-container {
    transition: all 0.3s ease-in-out;
  }

  .image-container:hover, .video-container:hover {
    transform: scale(1.02);
  }

  .expanded-container {
    transition: all 0.3s ease-in-out;
  }
</style>

<script>
  function setupGallery() {
    const expandedContainer = document.querySelector<HTMLElement>('.expanded-container');
    const normalContent = document.querySelector<HTMLElement>('.normal-content');
    const imageContainers = document.querySelectorAll<HTMLElement>('.image-container');
    const videoContainer = document.querySelector<HTMLElement>('.video-container');
    const expandedImage = expandedContainer?.querySelector('img');
    const expandedVideo = expandedContainer?.querySelector('iframe');
    const closeButton = expandedContainer?.querySelector('button');
    
    function showExpandedContent(type: 'image' | 'video', src: string) {
      if (expandedContainer && expandedImage && expandedVideo && normalContent) {
        if (type === 'image') {
          expandedImage.src = src;
          expandedImage.classList.remove('hidden');
          expandedVideo.classList.add('hidden');
        } else {
          expandedVideo.src = src;
          expandedVideo.classList.remove('hidden');
          expandedImage.classList.add('hidden');
        }
        expandedContainer.classList.remove('hidden');
        normalContent.style.visibility = 'hidden';
      }
    }

    function hideExpandedContent() {
      if (expandedContainer && normalContent && expandedVideo) {
        expandedContainer.classList.add('hidden');
        normalContent.style.visibility = 'visible';
        expandedVideo.src = ''; // Reset video when closing
      }
    }

    imageContainers.forEach(container => {
      container.addEventListener('click', () => {
        const img = container.querySelector('img');
        if (img) {
          showExpandedContent('image', img.src);
        }
      });
    });

    videoContainer?.addEventListener('click', () => {
      const iframe = videoContainer.querySelector('iframe');
      if (iframe) {
        showExpandedContent('video', iframe.src);
      }
    });

    closeButton?.addEventListener('click', hideExpandedContent);
  }

  // Ejecutar en carga inicial y en transiciones de página
  setupGallery();
  document.addEventListener('astro:page-load', setupGallery);
</script>